@node Credits
@section Credits

The @ecl{} project is an implementation of the @clisp{} language that
aims to comply with the @ansi{} standard. The first ECL implementations
were developed by Giuseppe Attardi's who produced an interpreter and
compiler fully conformant with the Common-Lisp as reported in
@cite{Steele:84}. ECL derives itself mostly from Kyoto @clisp{}, an
implementation developed at the Research Institute for Mathematical
Sciences (RIMS), Kyoto University, with the cooperation of Nippon Data
General Corporation.  The main developers of Kyoto @clisp{} were Taiichi
Yuasa and Masami Hagiya, of the Research Institute for Mathematical
Sciences, at Kyoto University.

We must thank Giuseppe Attardi, Yuasa and Hagiya and Juan Jose Garcia
Ripoll for their wonderful work with preceding implementations and for
putting them in the Public Domain under the GNU General Public License
as published by the Free Software Foundation.  Without them this product
would have never been possible.

This document is an update of the original ECL documentation, which was
based in part on the material in @bibcite{Yuasa:85}

The following people or organizations must be credited for support in
the development of Kyoto @clisp{}: Prof. Reiji Nakajima at RIMS, Kyoto
University; Nippon Data General Corporation; Teruo Yabe; Toshiyasu
Harada; Takashi Suzuki; Kibo Kurokawa; Data General Corporation; Richard
Gabriel; Daniel Weinreb; Skef Wholey; Carl Hoffman; Naruhiko Kawamura;
Takashi Sakuragawa; Akinori Yonezawa; Etsuya Shibayama; Hagiwara
Laboratory; Shuji Doshita; Takashi Hattori.

William F. Schelter improved KCL in several areas and developed Austin
Kyoto @clisp{} (AKCL). Many ideas and code from AKCL have been
incorporated in @ecl{}.

The following is the partial list of contributors to ECL: Taiichi Yuasa
and Masami Hagiya (KCL), William F. Schelter (Dynamic loader,
conservative GC), Giuseppe Attardi (Top-level, trace, stepper, compiler,
CLOS, multithread), Marcus Daniels (Linux port) Cornelis van der Laan
(FreeBSD port) David Rudloff (NeXT port) Dan Stanger, Don Cohen, and
Brian Spilsbury.

We have to thank for the following pieces of software that have helped
in the development of @ecl{}
@table @sc
@item Bruno Haible
For the Cltl2-compliance test
@item Peter Van Eynde
For the ANSI-compliance test
@item Symbolic's Inc.
For the ANSI-compliant LOOP macro.
@end table

The @ecl{} project also owes a lot to the people who have tested this
program and contributed with suggestions, error messages and
documentation: Eric Marsden, Hannu Koivisto, Jeff Bowden and Yuto
Hayamizu, Bo Yao and others whose name we may have omitted.
