;;;; -*- Mode: Lisp; Syntax: Common-Lisp; indent-tabs-mode: nil -*-
;;;; vim: set filetype=lisp tabstop=8 shiftwidth=2 expandtab:

;;; @configure_input@

(terpri)
(princ ";;; Loading src:lsp;export.lsp")
(load "src:lsp;export.lsp" :verbose nil)
(terpri)
(princ ";;; Loading src:lsp;defmacro.lsp")
(load "src:lsp;defmacro.lsp" :verbose nil)
(terpri)
(princ ";;; Loading src:lsp;helpfile.lsp")
(load "src:lsp;helpfile.lsp" :verbose nil)
(terpri)
(princ ";;; Loading src:lsp;evalmacros.lsp")
(load "src:lsp;evalmacros.lsp" :verbose nil)
(terpri)
(princ ";;; Loading src:lsp;cmuutil.lsp")
(load "src:lsp;cmuutil.lsp" :verbose nil)

(sys:*make-constant '+lisp-module-files+
'("src:lsp;export.lsp"
  "src:lsp;defmacro.lsp"
  "src:lsp;helpfile.lsp"
  "src:lsp;evalmacros.lsp"
  "src:lsp;cmuutil.lsp"
  "src:lsp;setf.lsp"
  "src:lsp;predlib.lsp"
  "src:lsp;seq.lsp"
  "src:lsp;arraylib.lsp"
  "src:lsp;assert.lsp"
  "src:lsp;defstruct.lsp"
  "src:lsp;iolib.lsp"
  "src:lsp;listlib.lsp"
  "src:lsp;mislib.lsp"
  "src:lsp;numlib.lsp"
  "src:lsp;packlib.lsp"
  "src:lsp;seqlib.lsp"
  "src:lsp;trace.lsp"
  "src:lsp;loop.lsp"
#+cmu-format
  "src:lsp;format.lsp"
  "src:lsp;defpackage.lsp"
  "src:lsp;ffi.lsp"
  "src:lsp;mp.lsp"
  "build:lsp;config.lsp"
  "src:lsp;module.lsp"
  "src:lsp;cmdline.lsp"
  "src:lsp;autoload.lsp"
  "src:lsp;cdr-5.lsp"
))

(mapc #'(lambda (x)
         (terpri)
         (princ ";;; Loading ")
         (princ x)
         (load x :verbose nil))
      (member "src:lsp;setf.lsp" +lisp-module-files+ :test #'equal))
